###
# app configuration
# http://docs.pylonsproject.org/projects/pyramid/en/1.6-branch/narr/environment.html
###

[app:main]
use = egg:mapfish_print_logs

pyramid.reload_templates = %(DEVELOPMENT)s
pyramid.debug_authorization = %(DEVELOPMENT)s
pyramid.debug_notfound = %(DEVELOPMENT)s
pyramid.debug_routematch = %(DEVELOPMENT)s
pyramid.default_locale_name = en

sqlalchemy.url = %(SQLALCHEMY_URL)s
sqlalchemy.pool_recycle = 30
sqlalchemy.pool_size = %(SQLALCHEMY_POOL_SIZE)s
sqlalchemy.max_overflow = %(SQLALCHEMY_MAX_OVERFLOW)s
sqlalchemy.use_batch_mode = true

sqlalchemy_slave.url = %(SQLALCHEMY_URL_SLAVE)s
sqlalchemy_slave.pool_recycle = 30
sqlalchemy_slave.pool_size = %(SQLALCHEMY_POOL_SIZE)s
sqlalchemy_slave.max_overflow = %(SQLALCHEMY_MAX_OVERFLOW)s
sqlalchemy_slave.use_batch_mode = true

tm.annotate_user = false

c2c.base_path = /c2c
c2c.log_view_enabled = 1
c2c.debug_view_enabled = 1
c2c.sql_profiler_enabled = 1
c2c.requests_default_timeout = 10

filter-with = proxy-prefix

[filter:proxy-prefix]
# Needed to take into account X-Forwarded-* headers
use = egg:PasteDeploy#prefix

###
# logging configuration
# http://docs.pylonsproject.org/projects/pyramid/en/1.6-branch/narr/logging.html
###

[loggers]
keys = root, sqlalchemy, alembic, mapfish, c2cwsgi

[handlers]
keys = console, logstash, json

[formatters]
keys = generic

[logger_root]
level = %(OTHER_LOG_LEVEL)s
handlers = %(LOG_TYPE)s

[logger_mapfish]
level = %(mapfish_LOG_LEVEL)s
handlers =
qualname = mapfish_print_logs

[logger_c2cwsgi]
level = %(C2CWSGI_LOG_LEVEL)s
handlers =
qualname = c2cwsgiutils

[logger_sqlalchemy]
level = %(SQL_LOG_LEVEL)s
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = %(ALEMBIC_LOG_LEVEL)s
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stdout,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s %(name)s %(message)s

[handler_logstash]
class = c2cwsgiutils.pyramid_logging.PyramidCeeSysLogHandler
args = [("%(LOG_HOST)s", %(LOG_PORT)s)]
level = NOTSET

[handler_json]
class = c2cwsgiutils.pyramid_logging.JsonLogHandler
args = (sys.stdout,)
level = NOTSET
